openapi: 3.1.0
info:
  title: API
  version: 1.0.0


paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'

      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      summary: get task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to get
          schema:
            type: integer
            format: int64
      
      responses:
        '200':
          description: The task by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
        '400':
          description: Bad request


    patch:
      summary: Partial update the task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: The fields to partially update
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    type: string
                  is_done:
                    type: boolean
                additionalProperties: false

      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          description: Task not found
        '404':
          description: Invalid input data


    delete:
      summary: Delete the task
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the task to delete
          schema:
            type: integer
            format: int64

      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found
        '400':
          description: Bad request

  /users:
    get:
      summary: get all users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      summary: Create a new User
      tags:
        - users
      requestBody:
        description: The user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{id}:
    get:
      summary: get user by ID
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to get
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: The user by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Bad request

    patch:
      summary: Partial update the fields of user
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user to update
          schema:
            type: integer
            format: int64
      requestBody:
        description: The fields to partially update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              additionalProperties: false

      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: User not found
        '404':
          description: Invalid input data

    delete:
      summary: Delete user
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the User to delete
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '400':
          description: Bad request

  /users/{id}/tasks:
    get:
      operationId: getTasksByUserID
      summary: Get all tasks by user ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: The ID of the user to get tasks
      responses:
        '200':
          description: A list of User's tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '404':
          description: User not found
        '400':
          description: Bad request

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        task:
          type: string
        is_done:
          type: boolean
        user_id:
          type: integer
          format: int64
         # readOnly: true


    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'  

